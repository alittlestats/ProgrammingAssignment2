files_specdata <- list.files("specdata", full.names=TRUE)
data <- lapply(files_specdata, read.csv)
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
x <- complete(directory) ## df from complete:"comp_specdata"
correlations <- data.frame()
abovet <- x[x$nobs > threshold, ]
for (i in abovet$id) {
correlations <- c(correlations, cor(data[,2],data[,3],use = "pairwise.complete.obs"))
}
## Return a numeric vector of correlations
## NOTE: Do not round the result!
return(correlations)
}
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
cor(data[,2],data[,3],use = "pairwise.complete.obs")
x <- complete(directory) ## df from complete:"comp_specdata"
correlations <- data.frame()
abovet <- x[x$nobs > threshold, ]
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
x <- complete(directory) ## df from complete:"comp_specdata"
correlations <- data.frame()
abovet <- x[x$nobs > threshold, ]
for (i in abovet$id) {
correlations <- c(correlations, cor(data[,2],data[,3],use = "pairwise.complete.obs"))
}
## Return a numeric vector of correlations
## NOTE: Do not round the result!
return(correlations)
}
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
abovet <- x[x$nobs > 150, ]
abovet
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
files_specdata <- list.files("specdata", full.names=TRUE)
data <-lapply(files_specdata, read.csv, header = TRUE)
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
x <- complete(directory) ## df from complete:"comp_specdata"
correlations <- data.frame()
abovet <- x[x$nobs > threshold, ]
for (i in abovet$id) {
correlations <- c(correlations, cor(data[i,2],data[i,3],use = "pairwise.complete.obs"))
}
## Return a numeric vector of correlations
## NOTE: Do not round the result!
return(correlations)
}
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
abovet <- x[x$nobs > 150, ]
abovet
x <- complete(directory) ## df from complete:"comp_specdata"
correlations <- data.frame()
abovet <- x[x$nobs > threshold, ]
for (i in abovet$id) {
cor(data[i,2],data[i,3],use = "pairwise.complete.obs")
}
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
files_specdata <- list.files("specdata", full.names=TRUE)
data <-lapply(files_specdata, read.csv, header = TRUE)
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
x <- complete(directory) ## df from complete:"comp_specdata"
correlations <- data.frame()
abovet <- x[x$nobs > threshold, ]
for (i in abovet$id) {
correlations<-c(correlations, cor(abovet[,2],abovet[,3],use = "complete"))
}
## Return a numeric vector of correlations
## NOTE: Do not round the result!
return(correlations)
}
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
files_specdata <- list.files("specdata", full.names=TRUE)
data <-lapply(files_specdata, read.csv, header = TRUE)
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
x <- complete(directory) ## df from complete:"comp_specdata"
correlations <- data.frame()
abovet <- data[x$nobs > threshold, ]
for (i in abovet$id) {
correlations<-c(correlations, cor(abovet[,2],abovet[,3],use = "complete"))
}
## Return a numeric vector of correlations
## NOTE: Do not round the result!
return(correlations)
}
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Returns a numeric vector of correlations
files <- (Sys.glob("specdata//*.csv"));
correlations <- c()
for (file in files) {
file_data <- read.csv(file, sep = ",");
complete_cases <- file_data[complete.cases(file_data),];
if (nrow(complete_cases) > threshold) {
correlations <- c(correlations, cor(complete_cases$sulfate, complete_cases$nitrate))
}
}
return(correlations)
}
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
?getmonitor
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
files_specdata <- list.files("specdata", full.names=TRUE)
data <-lapply(files_specdata, read.csv, header = TRUE)
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
correlations <- numeric(0)
x <- complete(directory) ## df from complete:"comp_specdata"
x <- x[x$nobs > threshold, ]
for (i in x$id) {
y <- data[i]
correlations <- c(correlations, cor(y$sulfate, y$nitrate, use = "pairwise.complete.obs"))
}
## Return a numeric vector of correlations
## NOTE: Do not round the result!
return(correlations)
}
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
files_specdata <- list.files("specdata", full.names=TRUE)
data <-lapply(files_specdata, read.csv, header = TRUE)
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
correlations <- numeric(0)
x <- complete(directory) ## df from complete:"comp_specdata"
x <- x[x$nobs > threshold, ]
for (i in x$id) {
y <- read.csv(files_specdata[i])
correlations <- c(correlations, cor(y$sulfate, y$nitrate, use = "pairwise.complete.obs"))
}
## Return a numeric vector of correlations
## NOTE: Do not round the result!
return(correlations)
}
summary
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
files_specdata <- list.files("specdata", full.names=TRUE)
data <-lapply(files_specdata, read.csv, header = TRUE)
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
correlations <- numeric(0)
x <- complete(directory) ## df from complete:"comp_specdata"
x <- x[x$nobs > threshold, ]
for (i in x$id) {
y <- data[i]
correlations <- c(correlations, cor(y$sulfate, y$nitrate, use = "pairwise.complete.obs"))
}
## Return a numeric vector of correlations
## NOTE: Do not round the result!
return(correlations)
}
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
data[1]
x <- x[x$nobs > 150, ]
x
x$id
x$i
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
files_specdata <- list.files("specdata", full.names=TRUE)
data <-lapply(files_specdata, read.csv, header = TRUE)
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
correlations <- numeric(0)
x <- complete(directory) ## df from complete:"comp_specdata"
x <- x[x$nobs > threshold, ]
for (i in x$i) {
y <- data[i]
correlations <- c(correlations, cor(y$sulfate, y$nitrate, use = "pairwise.complete.obs"))
}
## Return a numeric vector of correlations
## NOTE: Do not round the result!
return(correlations)
}
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
Head(x,5)
head(x)
complete("specdata")
complete("specdata")
source("complete.R")
complete("specdata")
source("complete.R")
header(comp_specdata)
head(comp_specdata)
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
files_specdata <- list.files("specdata", full.names=TRUE)
comp_specdata <- data.frame()
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
for (i in id){
x <- read.csv(files_specdata[i])
y <- nrow(x[complete.cases(x), ])
df <- data.frame(id=i,nobs=y)
comp_specdata <- rbind(comp_specdata,df)
}
print.data.frame(comp_specdata)
}
complete("specdata")
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
files_specdata <- list.files("specdata", full.names=TRUE)
data <-lapply(files_specdata, read.csv, header = TRUE)
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
correlations <- numeric(0)
x <- complete(directory) ## df from complete:"comp_specdata"
x <- x[x$nobs > threshold, ]
for (i in x$id) {
y <- data[i]
correlations <- c(correlations, cor(y$sulfate, y$nitrate, use = "pairwise.complete.obs"))
}
## Return a numeric vector of correlations
## NOTE: Do not round the result!
return(correlations)
}
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
for (i in 1) {
y <- data[1]
correlations <- c(correlations, cor(y$sulfate, y$nitrate, use = "pairwise.complete.obs"))
}
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
files_specdata <- list.files("specdata", full.names=TRUE)
data <-lapply(files_specdata, read.csv, header = TRUE)
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
correlations <- numeric(0)
x <- complete(directory) ## df from complete:"comp_specdata"
x <- x[x$nobs > threshold, ]
for (i in x$id) {
y <- data[i]
correlations <- c(correlations, cor(y[ ,"sulfate"], y[ ,"nitrate"], use = "pairwise.complete.obs"))
}
## Return a numeric vector of correlations
## NOTE: Do not round the result!
return(correlations)
}
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
x <- x[x$nobs > threshold, ]
x <- x[x$nobs > 150, ]
x <- complete("specdata")
x <- x[x$nobs > threshold, ]
x <- complete("specdata") ## df from complete:"comp_specdata"
x <- x[x$nobs > 150, ]
x
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
y
x <- complete("specdata") ## df from complete:"comp_specdata"
x <- x[x$nobs > 150, ]
for (i in x$id) {
y <- data[i]}
y
files_specdata <- list.files("specdata", full.names=TRUE)
data <-lapply(files_specdata, read.csv, header = TRUE)
x <- complete("specdata") ## df from complete:"comp_specdata"
x <- x[x$nobs > 150, ]
for (i in x$id) {
y <- data[i]
}
y
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
source("submitscript1.R")
submit()
submit()
submit()
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
swirl()
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
library(datasets)
data(iris)
head(iris)
colMeans(iris$Sepal.Length)
colMeans(iris, na.rm = T)
apply(iris,2,mean)
colMeans(irin, na.rm =T)
colMeans(iris,na.rm=T)
s <- split(iris, iris$Species)
lapply(s, function(x) colMeans(x[, "Sepal.Length"]))
lapply(s, function(x) colMeans(x[[Sepal.Length]))
lapply(s, function(x) colMeans(x[[Sepal.Length]]))
lapply(s, function(x) colMeans(x[ ,"Sepal.Length"]))
lapply(s, function(x) colMeans(x[ ,"Sepal.Length"]))
0
n
tapply(iris$Sepal.Length,s, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
sapply(split(mtcars$mpg, mtcars$cyl), mean)
debug(ls)
ls
?ls
ls(mtcars)
undebug(ls)
q
q
quit
}
debugonce(ls)
ls(mean)
debug(ls)
debug(mean)
q
q
debug
}
>
n
n
n
n
Q
Q
Q
n
n
Q
n
n
Q
n
x<- sapply(split(mtcars$hp, mtcars$cyl), mean)
?debug
debuggingState(off)
q
q
undebug
with(mtcars, tapply(mpg, cyl, mean))
x <- with(mtcars, tapply(hp,cyl,mean))
x
x[4]-x[8]
class(x)
x <- with(mtcars, sapply(hp,cyl,mean))
x <- sapply(split(mtcars$hp,mtcars$cyl),mean)
x
x[1]-x[3]
x[4]-x[8]
x[3]-x[1]
?with
setwd ProgrammingAssignment2
source("ProgrammingAssignment2/cachemean.R")
cachemean(x)
makevector(x)
source("ProgrammingAssignment2/cachemean.R")(x)
source("ProgrammingAssignment2/cachemean.R")
makeVector(x)
cachemean(x)
?inv
?inverse
dir
ls
setwd DataScience
?setwd
setwd(DataScience)
setwd(ProgrammingAssignment2)
setwd("ProgrammingAssignment2")
getwd
getwd()
source("cachematrix.R")
myMatrix <- matrix(c(1, 0, 5, 2, 1, 6, 3, 4, 0), nrow = 3, ncol = 3)
det(myMatrix)
makeCacheMatrix(myMatrix)
makeCacheMatrix(myMatrix)
myMatrix
x <- myMatrix
cachesolve(x)
makeCacheMatrix(x)
View(x)
a <- makeCacheMatrix(x)
?solve()
v1 = c(1:100)
mv1 = makeVector(v1)
mv1
v2 = c(1:200)
mv2 = makeVector(v2)
mv2
cachemean(mv1)
cachemean(mv2)
cachemean(mv1)
cachemean(mv2)
cachemean(makeVector(v1))
a <- makeCacheMatrix(myMatrix)
# sets matrix value, clears any prev matrix
